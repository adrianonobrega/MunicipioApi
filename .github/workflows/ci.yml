name: CI/CD Build, Test, e Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: MunicipioApi/MunicipioApi.csproj 
  TEST_PROJECT_NAME: Tests/Tests.csproj 

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Setup .NET 8.0
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build Solution
      run: dotnet build --configuration Release --no-restore

    - name: Run Tests
      run: dotnet test ${{ env.TEST_PROJECT_NAME }} --no-build --verbosity normal
      
  docker_publish:
    needs: build_and_test # Depende que o build e os testes passem
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to GitHub Container Registry (GHCR)
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: . 
        push: true
        tags: ghcr.io/${{ lower(github.repository) }}:latest
        file: Dockerfile # O Dockerfile na raiz da solução
